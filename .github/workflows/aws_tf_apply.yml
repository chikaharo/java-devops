### Reusable workflow to download terraform artifact built by `az_tf_plan` and apply the artifact/plan ###
name: "Apply_TF_Plan"
# env:
#   TF_CLOUD_ORGANIZATION: "HuyDinh"
#   TF_API_TOKEN: "${{ secrets.TFC_API_TOKEN }}"
#   TF_WORKSPACE: "java-devops"
#   CONFIG_DIRECTORY: "./terraform/"
on:
  workflow_call:
    inputs:
      tf_version:
        description: "Specifies version of Terraform to use. e.g: 1.1.0 Default=latest."
        required: false
        type: string
        default: latest
      gh_environment:
        description: "Specifies the GitHub deployment environment."
        required: false
        type: string
        default: "dev"
    secrets:
      cli_config_credentials_token:
        description: "cli config credentials token"
        required: true
# permissions:
#   id-token: write # This is required for requesting the JWT
#   contents: read # This is required for actions/checkout
jobs:
  apply-plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.gh_environment }}
    permissions:
      contents: read
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Upload Configuration
      #   uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
      #   id: apply-upload
      #   with:
      #     workspace: "java-devops"
      #     directory: "./terraform"

      # - name: Create Apply Run
      #   uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
      #   id: apply-run
      #   with:
      #     workspace: "java-devops"
      #     configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      # - name: Apply
      #   uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
      #   if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
      #   id: apply
      #   with:
      #     run: ${{ steps.apply-run.outputs.run_id }}
      #     comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.tf_version }}
          cli_config_credentials_token: ${{ secrets.cli_config_credentials_token }}

      - name: Terraform Init
        id: init
        run: |
          cd terraform
          terraform init

      - name: Terraform Validate
        id: validate
        run: |
          cd terraform
          terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          cd terraform
          terraform plan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::357171621133:role/github-oidc-role
          role-session-name: samplerolesession
          aws-region: ap-southeast-1

      - name: Print AWS SSM Parameter
        run: aws ssm get-parameter --name=hello_aws-gh-oidc --query Parameter.Value

      - name: Print assumed role
        run: aws sts get-caller-identity
