# deployment:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Set short git commit SHA
#         id: commit
#         uses: prompt/actions-commit-hash@v2

#   - name: Plan
#     id: plan-terraform
#     uses: ./.github/workflows/aws_tf_plan.yml
#     with:
#       gh_environment: dev

#   - name: Apply
#     id: apply-terraform
#     uses: ./.github/workflows/aws_tf_apply.yml
#     with:
#       gh_environment: dev

#   - name: Configure AWS credentials
#     uses: aws-actions/configure-aws-credentials@v4
#     with:
#       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       aws-region: ${{vars.AWS_REGION}}

#   - name: Login to Amazon ECR
#     id: login-ecr
#     uses: aws-actions/amazon-ecr-login@v2

#   - name: Build, tag, and push image to Amazon ECR
#     env:
#       ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#       IMAGE_TAG: ${{ steps.commit.outputs.short }}
#       ECR_REPOSITORY: boardgame
#     run: |
#       docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#       docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

#   - name: Update kube config
#     # env:
#     #   EKS_CLUSTER_NAME: ${{ steps.apply-terraform.outputs.cluster_name }}
#     run: aws eks update-kubeconfig --name $(terraform output cluster_name) --region ap-southeast-1

#   - name: Deploy to EKS
#     env:
#       ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#       IMAGE_TAG: ${{ steps.commit.outputs.short }}
#       ECR_REPOSITORY: boardgame
#     run: |
#       sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" deployment-service.yaml && \
#       kubectl apply -f deployment-service.yaml
